// <auto-generated />
using System;
using ChatGPT_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatGPT_API.Migrations
{
    [DbContext(typeof(DbLinkContext))]
    partial class DbLinkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatGPT_API.Entity.Db.ActivationCodeEntity", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.Property<long>("CodeGradeID")
                        .HasColumnType("bigint");

                    b.Property<int>("RemainingTimes")
                        .HasColumnType("int")
                        .HasColumnName("remainingTimes");

                    b.HasKey("ID");

                    b.HasIndex("CodeGradeID");

                    b.ToTable("ActivationCode");
                });

            modelBuilder.Entity("ChatGPT_API.Entity.Db.CodeGradeEntity", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("UsageFrequency")
                        .HasColumnType("int")
                        .HasColumnName("usageFrequency");

                    b.Property<int>("UsageTime")
                        .HasColumnType("int")
                        .HasColumnName("usageTime");

                    b.HasKey("ID");

                    b.ToTable("CodeGradeEntity");
                });

            modelBuilder.Entity("ChatGPT_API.Entity.Db.HistoryMessagesEntity", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("ID");

                    b.ToTable("HistoryMessages");
                });

            modelBuilder.Entity("ChatGPT_API.Entity.Db.HistoryRecordEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("messages");

                    b.Property<string>("UID")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uid");

                    b.HasKey("Id");

                    b.ToTable("HistoryRecord");
                });

            modelBuilder.Entity("ChatGPT_API.Entity.Db.UserEntity", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expireDate");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("grade");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<int>("RemainingTimes")
                        .HasColumnType("int")
                        .HasColumnName("remainingTimes");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("userName");

                    b.HasKey("UID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ChatGPT_API.Entity.Db.ActivationCodeEntity", b =>
                {
                    b.HasOne("ChatGPT_API.Entity.Db.CodeGradeEntity", "CodeGrade")
                        .WithMany()
                        .HasForeignKey("CodeGradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeGrade");
                });
#pragma warning restore 612, 618
        }
    }
}
